typescript var types:

number	
string	
void	
null	
undefined
number[]   -- number array


sample: var identifier:type = value ;
	var foo:string = "sometext"




Union Type :gives programs the ability to combine one or two types
	var val:string|number 
		val can get values with type string or number

	function samp(name:string|string[]) { 



Interface is a syntax structure for objects and classes in TS and make rules which a class must follow.
interface IPerson { 
   firstName:string, 
   lastName:string, 
   sayHi: ()=>string 
} 

var customer:IPerson = { 
   firstName:"Tom",
   lastName:"Hanks", 
   sayHi: ():string =>{return "Hi there"} 
} 
	if any props or methods are lost in the class witch was declared as needed in the interface it will  cuz an error.

function(p1:IPerson,p2)


Namespace -->

	In gulpfile     target: 'ES5', module: 'es2015' are not needed
	
    			outFile: './dist/ts/bookingroom.js' is needed

			if u are usning a any other TS file in ur current TS file u should import it for the tsc(typescript compile)
			it is the /// <reference path="./util.ts"/> called triple slash refrecing!

			any class in the namespace should be exported using (export) keyword even if ur not refrencing it in an other class or importing it any where.
			

linter would not be activated if tsconfig.json is not placed in ur directory.


selectedElement instanceof HTMLSelectElement
	->HTMLSelectElement is an object of dome
	we are checking if the element we select is an instance of the DOM object
	The DOM objects are parsed with the API built in the browser.


outFile option is for namespace compile
outDir is for normal compile.




