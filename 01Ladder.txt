A ladder optimized based on Knowledge NEEDS.
----------------------------------------------

Its obviouse that everything u learn should be practiced and get wrote down at
the same time.

<<< Lots of knowledge is out there and their getting depricated every second. LEARN LITTLE USE MORE >>>

=>Topic is the Basic most important things i need to start working and making things happen!
=>profassion comes with work and practice and needing something not reading what u may need! cuz u dont!!

-- Search for Hot Best topics for your skill-->
-- Learn the Basics -->
-- Do sample projects or real work and larn Pro stuff in the way coding 
   (you know what u need because you have done searrches!!!) -->


------------------Genetic Topics---------------------------------------------

HTTP underestanding

REST API underestanding (rest , api)

console fundation


------------------BackEnd---------------------------------------------------

PHP Basic

DATABASE and SQL Basic

CRUD Operation

package manager composer.

MVC(sample course) articles and preciples.

php best practice

php pdo

--Coding like a pro with oop(learn how to make packages)

--follow up the rules of psr 1 2 3 and code snifer for better coding

--grasp new ideas and skills from frameworks and packages to be pro.

--Laravel toure!!! laracast.

--PHP OOP

--PHP 7

--better php coding with testing and debug mode.

--composer deep learning

--Testing


------------------REACT-----------------------------------------------------


--React 
	--Flux --Redux 

--react routing

--react validations

--map set and WeakSet and ... data structure.

--get and set functions in properties.

--react svg system
https://css-tricks.com/creating-svg-icon-system-react/



------------------Generic---------------------------------------------------

Basic Terminal usage.

-Routing

--FTP & Web Host Setup (hostgator).

--Basic SSH

--Github Basic

--Learnn How Client & Server Talk To Each Other

--RESTful Web Services / GET POST PUT DELETE request.

--MVC



------------------Basic FrontEnd--------------------------------------------

Basic Html

CSS

Basic JavaScript



--------------------Pro FrontEnd--------------------------------------------

--Modular Programings

--Design Patterns JS

--Javascript Best Practices

--Documentation Best Practices

--JS CONCEPTS IN DEPTH --object prototypes context clusure and ...

--Functional Programings

--JS dirty but interesting ways to do things.

-ES6 (babel)

Babel

SVG Google Map 

CSS Tools 
	SASS
	FrameWork Semantic
	Responsive Design

JS best practices

--YEOMAN

TaskRunner
	 Gulp
Dependency Management
	-Webpack
Bower (package management)

*MV Javascript Framework
	React.js
		--Flux
		--MobX
		Redux
		create-react-app

--Unit Testing
	enzyme  (best react testing tool)
	karma
	Mocha
	Jasmine



------------------Tooling---------------------------------------------------
--Vim mastery

--sublime Mastery

--phpstorm mastery



------------------ServerSide ADMINISTRATOR----------------------------------
--Ducker





-----------------------------Mobile-----------------------------------------










